使用freemarker作为模板。ok
生成的服务类提供stream方法。ok
把test/App.java项目重构为一个类。ok
将test/App.java合并到proxy中。ok
从文件读取配置。ok
将模板打包到程序中。ok
将依赖类加入到jar包中。ok
尝试去掉classPath配置。ok
将ProtoCompiler配置拆分成protocompiler和googleproto。ok
生成的服务类提供两个构造函数，一个传入Channel，另一个传入ChannelSelector。cancel
编写NameResolver，封装Consul。ok
编写ConfigurationService。ok
支持enum。通过forNumber(int)构建。ok
支持下划线命名。ok
设计RegistryService。ok
合并各个项目，做成一个类。ok
早期版本去掉spring支持。
支持按需求启动。
为ProxyServiceBuilder增加main方法。
让ConfigurationService支持Consul。
让ConfigurationService支持ZooKeeper。
让ConfigurationService支持Etcd3。
让ConfigurationService支持MySQL。
让ConfigurationService支持SQLServer。
让ConfigurationService支持SQLite。
让ConfigurationService支持本地文件。
将Gateway和ConfigurationService合并，通过配置控制。
为Configuration增加@Condition。得到URLClassLoader的URL列表，逐一解析JAR，得到类名和注解。
编写LoadBalancer，采用本地最优策略进行负载均衡。
将模板中的硬编码提取出来。
支持SSL。
将UnaryMethod改为异步。
将依赖的程序（Win/Linux）加入到jar包中，启动时增加一个参数--install，将程序解压缩到目录。
集成git/svn。
远期做成一个一站式开箱即用的，可以创建新工程，查看服务状态，编辑配置，部署/下线服务。允许作为agent运行。
整合SpringBoot和gRPC。如果以gRPC模式启动，使用自定义扫描和注入。如果以SpringBoot模式启动，使用Spring的工具。
