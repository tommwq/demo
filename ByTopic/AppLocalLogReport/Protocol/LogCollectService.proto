syntax = "proto3";

package com.tq.applogmanagement;

option java_package = "com.tq.applogmanagement";
option java_outer_classname ="LogCollectServiceProtos";

// 服务器向App发出请求，要求抓取App存储的本地日志。
message LogReportResult {

    enum LogLocateMethod {
        SEQUENCE = 0;
        TIME = 1;
    }

    bool heartbeat = 1;
    string module = 2;
    LogLocateMethod locate_method = 3;
    int64 start_sequence = 4;
    int64 start_time = 5;
    int32 log_count = 6;
}

// 记录函数参数。
message MethodParameter {
    string name = 1;
    string value = 2;
}

enum LogLevel {
    TRACE = 0;
    DEBUG = 1;
    INFO = 2;
    WARN = 3;
    ERROR = 4;
    FATAL = 5;
}

// App返回给服务器的日志。
message LogReport {
    bool heartbeat = 1;
    LogLevel level = 2;
    int64 local_time = 3;
    string module = 4;
    string source_file_name = 5;
    int32 source_line_number = 6;
    string class_name = 7;
    string method_name = 8;
    repeated MethodParameter input_parameter = 9;
    string result = 10;
}

service LogCollectService {
    rpc ReportLog (stream LogReport) returns (stream LogReportResult);
}